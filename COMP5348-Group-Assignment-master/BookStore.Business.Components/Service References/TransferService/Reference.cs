//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStore.Business.Components.TransferService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransferService.ITransferService")]
    public interface ITransferService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransferService/Transfer")]
        void Transfer(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransferService/Transfer")]
        System.Threading.Tasks.Task TransferAsync(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransferService/Refund")]
        void Refund(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITransferService/Refund")]
        System.Threading.Tasks.Task RefundAsync(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransferServiceChannel : BookStore.Business.Components.TransferService.ITransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransferServiceClient : System.ServiceModel.ClientBase<BookStore.Business.Components.TransferService.ITransferService>, BookStore.Business.Components.TransferService.ITransferService {
        
        public TransferServiceClient() {
        }
        
        public TransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Transfer(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid) {
            base.Channel.Transfer(pAmount, pFromAcctNumber, pToAcctNumber, Oid);
        }
        
        public System.Threading.Tasks.Task TransferAsync(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid) {
            return base.Channel.TransferAsync(pAmount, pFromAcctNumber, pToAcctNumber, Oid);
        }
        
        public void Refund(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid) {
            base.Channel.Refund(pAmount, pFromAcctNumber, pToAcctNumber, Oid);
        }
        
        public System.Threading.Tasks.Task RefundAsync(double pAmount, int pFromAcctNumber, int pToAcctNumber, string Oid) {
            return base.Channel.RefundAsync(pAmount, pFromAcctNumber, pToAcctNumber, Oid);
        }
    }
}
